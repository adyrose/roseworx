@mixin focus-ring
{
	outline:none;
	box-shadow: $focus-ring-shadow;
}

@mixin component-spacing($component: null)
{
	@if $component
	{
		h1, .h1, h2, .h2, h3, .h3, h4, .h4, h5, .h5, h6, .h6
		{
			+ .#{$component}
			{
				margin-top: 0px;
			}
		}
		.#{$component}
		{
			margin-top: $medium-spacing;
			margin-bottom: $medium-spacing;
		}
	}
}

@mixin change-link-color($color) {
	a
	{
		color:$color !important;
		&:after
		{
			background-color:$color !important;
		}
	}
}

@mixin flex-center
{
	display:flex;
	justify-content:center;
	align-items:center;
}

@mixin absolute-center
{
	position:absolute;
	top:50%;
	left:50%;
	transform:translate(-50%,-50%);
}

@mixin full-size
{
	position:absolute;
	top:0px;
	right:0px;
	left:0px;
	bottom:0px;
	height:100%;
	width:100%;
}

@mixin snap-down-from($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (max-width: map-get($breakpoints, $breakpoint)) {
			@content;
		}
	}
	@else {
		@warn "`#{$breakpoint} is not a valid breakpoint. Available breakpoints are: #{map-keys($breakpoints)}`"
	}
}

@mixin snap-up-from($breakpoint) {
	@if map-has-key($breakpoints, $breakpoint) {
		@media (min-width: map-get($breakpoints, $breakpoint)) {
			@content;
		}
	}
	@else {
		@warn "`#{$breakpoint} is not a valid breakpoint. Available breakpoints are: #{map-keys($breakpoints)}`"
	}
}